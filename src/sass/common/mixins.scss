@mixin font-weight($weight) {
  $weights: (
    light: 300,
    regular: 400,
    semibold: 600,
    bold: 700,
    extrabold: 800,
  );

  $output: $weight;
  @if map-has-key($weights, $weight) {
    $output: map-get($weights, $weight);
  }

  font-weight: $output;
}

@mixin transition($props) {
  -webkit-transition: $props;
  -moz-transition: $props;
  -ms-transition: $props;
  -o-transition: $props;
  transition: $props;
}

@mixin transform($props) {
  -webkit-transform: $props;
  -moz-transform: $props;
  -ms-transform: $props;
  transform: $props;
}

@for $i from 0 through 9 {
  .zindex-#{$i} {
    z-index: #{$i};
  }
}

/*------------------------------------------------------------------
    Placeholder
    ------------------------------------------------------------------*/
@mixin placeholder-custom {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}

@mixin placeholder-styles($color, $fs, $lh) {
  &::-webkit-input-placeholder {
    /* WebKit browsers */
    color: $color;
    font-size: $fs;
    line-height: $lh;
  }
  &:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: $color;
    font-size: $fs;
    line-height: $lh;
  }
  &::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: $color;
    font-size: $fs;
    line-height: $lh;
  }
  &:-ms-input-placeholder {
    /* Internet Explorer 10+ */
    color: $color;
    font-size: $fs;
    line-height: $lh;
  }
}

@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
@mixin flexorder($val) {
  -ms-flex-order: $val;

  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -webkit-order: $val;
  order: $val;
}
@mixin flexdirection($direction) {
  flex-direction: $direction;
  -webkit-flex-direction: $direction; /* Safari 6.1+ */
  -ms-flex-direction: $direction;
}
@mixin flexwrap($wrap) {
  flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap; /* Safari 6.1+ */
  -ms-flex-wrap: $wrap;
}

@mixin flexwrap($wrap) {
  flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap; /* Safari 6.1+ */
  -ms-flex-wrap: $wrap;
}

@mixin flexshrink($val) {
  -webkit-flex-shrink: $val;
  -ms-flex-negative: $val;
  flex-shrink: $val;
}

@mixin flexprop($grow, $shrink, $basis) {
  -webkit-box-flex: $grow;
  -webkit-flex: $grow $shrink $basis;
  -ms-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
}

@mixin flexgrow($val) {
  flex-grow: $val;
  -webkit-flex-grow: $val;
  -moz-flex-grow: $val;
  -ms-flex-positive: $val;
}
@mixin alignflex($property) {
  -ms-flex-align: $property;
  align-items: $property;
  -webkit-align-items: $property;
}

@mixin flex-percentage($percentage: 1) {
  @if $percentage != 1 {
    box-sizing: border-box;
    flex: 1 1 $percentage;
    max-width: $percentage;
  } @else {
    box-sizing: border-box;
    flex: 1;
    max-width: 100%;
  }
}

@mixin justifyflex($property) {
  justify-content: $property;
  -webkit-justify-content: $property;
  @if $property == space-between {
    -ms-flex-pack: justify;
  } @else if $property == flex-end {
    -ms-flex-pack: end;
  } @else if $property == flex-start {
    -ms-flex-pack: start;
  } @else if $property == center {
    -ms-flex-pack: center;
  }
}

@mixin alignflex($property) {
  align-items: $property;
  -webkit-align-items: $property;
  -ms-align-items: $property;
  @if $property == flex-end {
    -ms-flex-align: end;
  } @else if $property == flex-start {
    -ms-flex-align: start;
  } @else {
    -ms-flex-align: $property;
  }
}

@mixin flex(
  $wrap: nowrap,
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $align-content: stretch,
  $display: flex
) {
  @if $display == inline-flex {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
  } @else {
    display: -ms-flexbox;
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
  }

  @if $wrap != nowrap {
    @include vendor-prefix(flex-wrap, $wrap);
  }
  @if $direction != row {
    @include vendor-prefix(flex-direction, $direction);
  }
  @if $justify != flex-start {
    @include justifyflex($justify);
  }
  @if $align != stretch {
    @include alignflex($align);
  }
  @if $align-content != stretch {
    @include vendor-prefix(align-content, $align-content);
  }
}

// custom height classes
// examples: fh-20, fh-20-xs
$spaceamounts: (
  20,
  25,
  30,
  35,
  40,
  45,
  50,
  55,
  60
); // Adjust this to include the pixel amounts you need.

$spaceamountsXS: (
  20,
  25,
  30,
  35,
  40
); // Adjust this to include the pixel amounts you need for Mobile.

$sides: (height); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .fh-#{$space} {
      height: #{$space}rem !important;
      min-height: #{$space}rem !important;
    }
  }
}

@include respondto(phone) {
  @each $space in $spaceamountsXS {
    @each $side in $sides {
      .fh-#{$space}-xs {
        height: #{$space}rem !important;
        min-height: #{$space}rem !important;
      }
    }
  }
}
